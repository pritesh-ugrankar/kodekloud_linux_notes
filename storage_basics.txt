DAS - Direct Attached Storage.
NAS - Network Attached Storage.
SAN - Storage Area Network.

NFS - NAS - works on FILE basis.

NFS Server maintains a list of clients that can access the file shares in /etc/exports.

Consider that the NFS Server has a file system - /software/repos - that needs to be accessed by various other servers.
The /etc/exports file in the NFS Server will then have entries like this:

/software/repos		10.61.35.201 10.61.35.202  10.61.35.203   

Where 10.61.35.201, 10.61.35.202 & 10.61.35.203 are the servers (called as clients)  that intend to access the /software/repo file system that resides on the NFS Server.

NOTE:- Certain ports have to be opened on both the NFS Server and the clients for NFS Access to work.

To share the file systems, the command - exportfs - has to be run on the NFS Server. 
exportfs -a command exports all the mounts (/software/repos is a mount)
exportfs -o 10.61.35.201:/software/repos will export the /software/repos mount point to the server 10.61.35.201 server.
Then, on the 10.61.35.201 server, you have to run the following command:
mount 10.61.112.101:/software/repos /mnt/software/repos
NOTE:- 10.61.112.101 is the IP Address of the NFS Server and /software/repos is also a file system on the same NFS Server.

LVM - Logical Volume Manager.

Logical Volumes are created in a Volume Group. The Volume Group is made up of different partitions or different disks ( called as Physical Volumes).

Consider the following example where we have a disk called /dev/sdb. We can create a Physical Volume out of it by running
the pvcreate /dev/sdb command.
We then create a Volume Group by running the vgcreate caleston_vg /dev/sdb command.
Run the command pvdisplay to see the Physical Volumes.
Run the command vgdisplay to see the Volume Groups.
Now we can create a logical volume by running the lvcreate -L 1G -n vol1 caleston_vg command where, lvcreate is the command to create a logical volume, -L means "create a linear volume, meaning if there are more than one physical volumes available in the volume group, use them all". 1 G is the size of the logical volume 
(1GB in this case) -n vol1 means "assign the name vol1 to the logical volume and caleston_vg is the name of the Volume Group.
To see the logical volume, use the lvdisplay command. You can also use the lvs command.
To create a filesystem on the Logical Volume, use the command mkfs.ext4 /dev/caleston_vg/vol1. Note the path /dev/caleston_vg/vol1.
Mount the filesystem by running the following command: Note - you should first create the directory /mnt/vol1 and then use it to mount the fs. 
mount -t ext4 /dev/caleston_vg/vol1 /mnt/vol1 
Now, we will resize the logical volume WHILE IT IS MOUNTED (YES IT IS ALLOWED!!)
To do so, first see if the volume group has sufficient space by running the vgs command. If the command shows that we have sufficient space, then run the following
command:
lvresize -L +1G -n /dev/caleston_vg/vol1
However if you run the df -hP /mnt/vol1 command, it will STILL show that it is 1 G and not 2 G!! This is because, though we increased the volume size, we
did not expand the filesystem size!! Run the following command to resize the file system.
resize2fs /dev/caleston_vg/vol1
Now when you run the df -hP /mnt/vol1 command you will see that the /dev/caleston_vg/vol1 now shows up as /dev/mapper/caleston_vg-vol1!!
Point is, both /dev/caleston_vg/vol1 and /dev/mapper/caleston_vg-vol1 BOTH REFER TO THE SAME FS!!

Exercise - create PV/VG/LV from /dev/vdb and /dev/vdc disks:

bob@caleston-lp10:~$ sudo fdisk -l | grep -iE "vdb|vdc"
Disk /dev/vdb: 1 GiB, 1073741824 bytes, 2097152 sectors
Disk /dev/vdc: 1 GiB, 1073741824 bytes, 2097152 sectors
bob@caleston-lp10:~$ sudo pvcreate /dev/vdb
  Physical volume "/dev/vdb" successfully created.
bob@caleston-lp10:~$ sudo pvcreate /dev/vdc
  Physical volume "/dev/vdc" successfully created.

Note - the /dev/vda1 Physical Volume already exists.
bob@caleston-lp10:~$ sudo pvdisplay
  --- Physical volume ---
  PV Name               /dev/vda1
  VG Name               vagrant-vg
  PV Size               <10.00 GiB / not usable 2.00 MiB
  Allocatable           yes (but full)
  PE Size               4.00 MiB
  Total PE              2559
  Free PE               0
  Allocated PE          2559
  PV UUID               ecXq0T-x7d2-Hma9-rS1w-Mi02-st3y-EqIoiW
   
  "/dev/vdb" is a new physical volume of "1.00 GiB"
  --- NEW Physical volume ---
  PV Name               /dev/vdb
  VG Name               
  PV Size               1.00 GiB
  Allocatable           NO
  PE Size               0   
  Total PE              0
  Free PE               0
  Allocated PE          0
  PV UUID               e0cCEm-QDf1-WId5-gkIa-1V6P-838q-wpbmkW
   
  "/dev/vdc" is a new physical volume of "1.00 GiB"
  --- NEW Physical volume ---
  PV Name               /dev/vdc
  VG Name               
  PV Size               1.00 GiB
  Allocatable           NO
  PE Size               0   
  Total PE              0
  Free PE               0
  Allocated PE          0
  PV UUID               XfrSvN-dar2-bjCN-ZFWU-hY3P-TOBc-NC7RpH
   
bob@caleston-lp10:~$ 


Now create a Volume group by name caleston_vg.

bob@caleston-lp10:~$ sudo vgcreate caleston_vg /dev/vdb /dev/vdc
  Volume group "caleston_g" successfully created
bob@caleston-lp10:~$ 
bob@caleston-lp10:~$ sudo vgdisplay
  --- Volume group ---
  VG Name               caleston_vg
  System ID             
  Format                lvm2
  Metadata Areas        2
  Metadata Sequence No  1
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                0
  Open LV               0
  Max PV                0
  Cur PV                2
  Act PV                2
  VG Size               1.99 GiB
  PE Size               4.00 MiB
  Total PE              510
  Alloc PE / Size       0 / 0   
  Free  PE / Size       510 / 1.99 GiB
  VG UUID               aeWhsZ-5vPm-Edyu-pteD-u5rR-mx96-pZyRoA
   
  --- Volume group ---
  VG Name               vagrant-vg
  System ID             
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  3
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                2
  Open LV               2
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               <10.00 GiB
  PE Size               4.00 MiB
  Total PE              2559
  Alloc PE / Size       2559 / <10.00 GiB
  Free  PE / Size       0 / 0   
  VG UUID               E8HKBz-6lBW-9sCH-51rQ-xu3p-J1U6-963v7c
   
bob@caleston-lp10:~$ 

Now create a logical volume called "data"
Note - other logical volumes already exist.

bob@caleston-lp10:~$ sudo lvcreate -L 1G -n data caleston_vg
  Logical volume "data" created.
bob@caleston-lp10:~$ sudo lvdisplay
  --- Logical volume ---
  LV Path                /dev/caleston_vg/data
  LV Name                data
  VG Name                caleston_vg
  LV UUID                seYcQy-lVcI-fGxf-3FWd-qxlG-gcMO-W4jn8Q
  LV Write Access        read/write
  LV Creation host, time caleston-lp10, 2022-09-22 20:11:33 +0000
  LV Status              available
  # open                 0
  LV Size                1.00 GiB
  Current LE             256
  Segments               2
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:2
   
  --- Logical volume ---
  LV Path                /dev/vagrant-vg/root
  LV Name                root
  VG Name                vagrant-vg
  LV UUID                aXeCm7-yCOC-srdD-T55P-wpHZ-c46Q-XJcX1t
  LV Write Access        read/write
  LV Creation host, time vagrant, 2021-11-21 18:46:22 +0000
  LV Status              available
  # open                 1
  LV Size                <9.04 GiB
  Current LE             2314
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:0
   
  --- Logical volume ---
  LV Path                /dev/vagrant-vg/swap_1
  LV Name                swap_1
  VG Name                vagrant-vg
  LV UUID                K00a0k-hD5J-CJZj-a3zj-CaDv-F82n-Q6ZDl0
  LV Write Access        read/write
  LV Creation host, time vagrant, 2021-11-21 18:46:22 +0000
  LV Status              available
  # open                 2
  LV Size                980.00 MiB
  Current LE             245
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:1
   
bob@caleston-lp10:~$ 

Now, mount the logical volume called "data" on /mnt/media
bob@caleston-lp10:~$ sudo mkdir /mnt/media
bob@caleston-lp10:~$ 
bob@caleston-lp10:~$ sudo mkfs.ext4 /dev/caleston_vg/data
mke2fs 1.44.1 (24-Mar-2018)
Creating filesystem with 262144 4k blocks and 65536 inodes
Filesystem UUID: a2cfcee5-fd36-4d2d-a8f2-101aa4a2aa7a
Superblock backups stored on blocks: 
        32768, 98304, 163840, 229376

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (8192 blocks): done
Writing superblocks and filesystem accounting information: done

bob@caleston-lp10:~$ sudo lvs
  LV     VG          Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  data   caleston_vg -wi-a-----   1.00g                                                    
  root   vagrant-vg  -wi-ao----  <9.04g                                                    
  swap_1 vagrant-vg  -wi-ao---- 980.00m                                                    
bob@caleston-lp10:~$ 
bob@caleston-lp10:~$ sudo mount -t ext4 /dev/caleston_vg/data /mnt/media/
bob@caleston-lp10:~$ 

Now increase the "data" logical volume by 500M

bob@caleston-lp10:~$ df -hP /mnt/media/
Filesystem                    Size  Used Avail Use% Mounted on
/dev/mapper/caleston_vg-data  976M  2.6M  907M   1% /mnt/media
bob@caleston-lp10:~$ sudo lvresize -L +500M -n /dev/caleston_vg/data 
  Size of logical volume caleston_vg/data changed from 1.00 GiB (256 extents) to <1.49 GiB (381 extents).
  Logical volume caleston_vg/data successfully resized.
bob@caleston-lp10:~$ 
bob@caleston-lp10:~$ df -hP /mnt/media/
Filesystem                    Size  Used Avail Use% Mounted on
/dev/mapper/caleston_vg-data  976M  2.6M  907M   1% /mnt/media
bob@caleston-lp10:~$ 
bob@caleston-lp10:~$ echo "The size is still 1G. We need to run the resize2fs command"
The size is still 1G. We need to run the resize2fs command

NOTE- You COULD have used /dev/caleston_vg/data instead of /dev/mapper/caleston_vg-data
bob@caleston-lp10:~$ sudo resize2fs /dev/mapper/caleston_vg-data 
resize2fs 1.44.1 (24-Mar-2018)
Filesystem at /dev/mapper/caleston_vg-data is mounted on /mnt/media; on-line resizing required
old_desc_blocks = 1, new_desc_blocks = 1
The filesystem on /dev/mapper/caleston_vg-data is now 390144 (4k) blocks long.

bob@caleston-lp10:~$ df -hP /mnt/media/
Filesystem                    Size  Used Avail Use% Mounted on
/dev/mapper/caleston_vg-data  1.5G  3.0M  1.4G   1% /mnt/media
bob@caleston-lp10:~$ 
